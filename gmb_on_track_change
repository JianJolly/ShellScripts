#!/bin/bash
#===============================================================================
#
#          FILE: gmb_on_track_change
#
#         USAGE: ./gmb_on_track_change  album_folder  [history_file]  [expired_hours]
#                   album_folder  ... Start folder for pcard
#                   history_file  ... 
#                   expired_hours ... Hours, after which the entry is expired
#
# I use this script together with the programs "gmusicbrowser" and "picard".
# With each song change this script is called and decided whether the program
# "picard" should be started or not.
#
#       OPTIONS: ---
#  REQUIREMENTS: picard
#          BUGS: ---
#         NOTES: ---
#        AUTHOR: Andreas BÃ¶ttger (aboettger), andreas.boettger@gmx.de
#  ORGANIZATION:
#       CREATED: Fr 25 Apr 2014 17:17:43 CEST
#      REVISION:  ---
#===============================================================================
#

if [ "$1" == "" ]
then
  echo "The supplied folder name is empty."
  exit 1
fi

dir=$(dirname "$1")

if [ "$(ls -A "$dir")" == "" ]; then
  echo "The supplied folder '$dir' is empty."
  exit 1
fi

pathNameHistory=""
if [ "$2" == "" ]
then
  pathNameHistory="~/gmb_call_picard_history"
else
  pathNameHistory="$2"
fi

fileNameHistory=$(basename "$pathNameHistory")
dirNameHistory=$(dirname "$pathNameHistory")

if [ "$3" == "" ]
then
  deleteAfterHours="24"
else
  deleteAfterHours="$3"
fi

compareDate=$(date -d "-$deleteAfterHours hours" +%s)
cat $pathNameHistory | while read line
do
    lineDate=$(gawk -F ":" '{print $1}' <<< "$line")
    # Write a new file with unexpired entries
    if [ "$lineDate" -gt "$compareDate " ]
    then
      echo "$line" >> "$dirNameHistory/$fileNameHistory.bak"
    fi
done

if [ -f "$dirNameHistory/$fileNameHistory.bak" ]
then
  mv "$dirNameHistory/$fileNameHistory.bak" "$pathNameHistory"
fi

matchedValue=""

if [ ! -f "$pathNameHistory" ]
then
  echo "File \"$pathNameHistory\" doesn't exists, I will create the file."
  touch "$pathNameHistory"
else
  dirEscaped=${dir//\[/\\[}
  dirEscaped=${dirEscaped//\]/\\]}
  dirEscaped=${dirEscaped//\?/\\?}
  dirEscaped=${dirEscaped//\^/\\^}
  dirEscaped=${dirEscaped//\$/\\$}
  matchedValue=$(grep "$dirEscaped" "$pathNameHistory")
fi

# Don't call picard, if the album '$dir' is already in the list of recently played albums.
if [ "$matchedValue" != "" ]
then
  echo "---- Don't call picard, the album '$dir' is already in the list of recently played albums: '$pathNameHistory'"
else
  echo "++++ Call picard, the album '$dir' is not in the list of recently played albums: '$pathNameHistory'"
  echo "$(date +%s):$dir" >> "$pathNameHistory"
  picard "$dir"
fi

exit 0
