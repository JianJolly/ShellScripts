#!/bin/bash -
#===============================================================================
#
#          FILE: add_cover_flac
#
#         USAGE: ./add_cover_flac
#
#   DESCRIPTION: Fügt allen FLACSs in einem Verzeichnis ein Cover (APIC Frame)
#		 hinzu, wenn dieses Verzeichnis ein JPG oder ein PNG enthält.
#		 Bereits vorhandene APIC Frames werden gelöscht.
#		 PNGs werden bevorzugt behandelt. Nach dem Hinzufügen werden
#		 die Bilder gelöscht. Der Name der Bilder muss 'cover.png'
#		 oder 'cover.jpg' sein.
#
#       OPTIONS: ---
#  REQUIREMENTS: ---
#          BUGS: ---
#         NOTES: ---
#        AUTHOR: Andreas Böttger (aboettger), andreas.boettger@gmx.de
#  ORGANIZATION:
#       CREATED: Fr 25 Apr 2014 18:12:15 CEST
#      REVISION:  ---
#===============================================================================

#set -o nounset                              # Treat unset variables as an error

shopt -s nullglob
shopt -s nocaseglob

add_cover() {
  #red="\e[0;31m"
  green="\e[0;32m"
  NC="\e[0m" # No Color

  find "$1" -depth -type f -name "$2"  | { while read -r image_path;
    do
      echo -e "${green}Cover found:${NC} $image_path"
      dir_name=$(dirname "$image_path")

      flacs=$(find "$dir_name" -maxdepth 1 -type f -name '*.flac' | wc -l)

      echo -e "${green}FLACs found:${NC} $flacs"

      if [[ $flacs != "0" ]]
      then
        find "$dir_name" -type f -maxdepth 1 -name "*.flac" -print0 | xargs -0 metaflac --remove --block-type=PICTURE
        find "$dir_name" -type f -maxdepth 1 -name "*.flac" -print0 | xargs -0 metaflac --import-picture-from="$image_path"

        rm "$image_path"
      fi
      echo
    done
  }
}

command -v metaflac >/dev/null 2>&1 || { notify-send -i error "$(basename "$0")" "\"metaflac\" required, but not installed."; echo "\"metaflac\" required, but not installed."; exit 1; }

if [[ $1 == "" ]]
then
  echo "Please specify a start directory."
  notify-send -i error "$(basename "$0")" "Please specify a start directory."
else
  if [[ ! -f "$1/cover.png" ]] && [[ ! -f "$1/cover.jpg" ]] ; then
    notify-send -i error "$(basename "$0")" "No images found (cover.png, cover.jpg)."
    echo "No images found (cover.png, cover.jpg)."
    exit 1
  fi
  # PNGs werden bevorzugt  
  add_cover "$1" cover.png
  add_cover "$1" cover.jpg
fi

notify-send -i info "$(basename "$0")" "done"

exit 0
